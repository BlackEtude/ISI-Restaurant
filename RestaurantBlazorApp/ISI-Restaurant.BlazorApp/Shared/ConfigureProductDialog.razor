@using ISI_Restaurant.Shared.Models
@using ISI_Restaurant.BlazorApp.Data

@inject FetchDataService FetchDataService


<div class="dialog-container">
    <div class="dialog">
        <div class="dialog-title">
            <h2>@Pizza.Product.Name</h2>
            @Pizza.Product.Description
        </div>
        <form class="dialog-body">
            <div>
                <label>Rozmiar:</label>
                <input type="range" min="@Product.MinimumSize" max="@Product.MaximumSize" step="10" @bind="Pizza.Size" @bind:event="oninput" />
                <span class="size-label">
                    @(Pizza.Size)cm (@(Pizza.GetBasePrice())zł)
                </span>
            </div>
            <div>
                <label>Dodatki:</label>
                @if (toppings == null)
                {
                    <select class="custom-select" disabled>
                        <option>(ładowanie...)</option>
                    </select>
                }
                else if (Pizza.Toppings.Count >= 6)
                {
                    <div>(osiągnięto max)</div>
                }
                else
                {
                    <select class="custom-select" @onchange="ToppingSelected">
                        <option value="-1" disabled selected>(wybierz)</option>
                        @for (var i = 0; i < toppings.Count; i++)
                        {
                            <option value="@i">@toppings[i].Name (@(toppings[i].GetFormattedPrice())zł)</option>
                        }
                    </select>
                }
            </div>

            <div class="toppings">
                @foreach (var topping in Pizza.Toppings)
                {
                    <div class="topping">
                        @topping.Name
                        <span class="topping-price">(@topping.GetFormattedPrice()zł)</span>
                        <button type="button" class="delete-topping" @onclick="@(() => RemoveTopping(topping))">x</button>
                    </div>
                }
            </div>
        </form>
        <div class="dialog-buttons">
            <button class="btn btn-secondary mr-auto" @onclick="OnCancel">Anuluj</button>
            <span class="mr-center">
                Cena: <span class="price">@(Pizza.GetFormattedTotalPrice())</span>
            </span>
            <button class="btn btn-success ml-auto" @onclick="OnConfirm">Dodaj do koszyka ></button>
        </div>
    </div>
</div>


@code {
    [Parameter] public OrderItem Pizza { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }
    [Parameter] public EventCallback OnConfirm { get; set; }

    private List<Topping> toppings;

    protected async override Task OnInitializedAsync()
    {
        toppings = (await FetchDataService.GetToppings()).ToList();
    }

    void ToppingSelected(ChangeEventArgs e)
    {
        if (int.TryParse((string)e.Value, out var index) && index >= 0)
        {
            AddTopping(toppings[index]);
        }
    }

    void AddTopping(Topping topping)
    {
        if (Pizza.Toppings.Find(pt => pt == topping) == null)
        {
            Pizza.Toppings.Add(topping);
        }
    }

    void RemoveTopping(Topping topping)
        => Pizza.Toppings.RemoveAll(pt => pt == topping);
}